"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MockGoodGesture = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _core = require("../../core");
class MockGoodGesture extends _core.Gesture {
  // Define state for the gesture
  state = {
    isDragging: false,
    startPosition: {
      x: 0,
      y: 0
    },
    currentDistance: 0,
    customValue: ''
  };
  resetState() {
    this.state = {
      isDragging: false,
      startPosition: {
        x: 0,
        y: 0
      },
      currentDistance: 0,
      customValue: ''
    };
  }

  // Extra property for coverage
  // eslint-disable-next-line class-methods-use-this
  extra = () => {};

  // Add custom properties for testing complex options

  clone(overrides) {
    return new MockGoodGesture((0, _extends2.default)({
      name: this.name,
      preventDefault: this.preventDefault,
      stopPropagation: this.stopPropagation,
      preventIf: this.preventIf
    }, overrides));
  }

  // Override the updateOptions method to handle our custom properties
  updateOptions(options) {
    super.updateOptions(options);
    this.complexOption = options.complexOption ?? this.complexOption;
    this.arrayOption = options.arrayOption ?? this.arrayOption;
  }
}
exports.MockGoodGesture = MockGoodGesture;